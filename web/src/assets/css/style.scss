@import './variable';

// reset
*{
    box-sizing: border-box;
    outline: none;
}
html{
    font-size: 14px;
}
body{
    margin: 0;
    padding: 0;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.2em;
    background-color: rgb(237, 237, 237);
}
a{
    color:#999;
}

// colors

@each $colorKey,$color in $colors {
    .text-#{$colorKey}{
        color: $color;
    }
    .bg-#{$colorKey}{
        background-color: $color;
    }
}

// text-align
@each $i in (left,center,right) {
    .text-#{$i}{
        text-align: $i;
    }
}

// font-size
@each $fsKey,$fsVal in $font-sizes {
    .fs-#{$fsKey}{
        font-size: $fsVal * $base-font-size;
    }
}

// flex
.d-flex{
    display: flex;
}
.flex-column{
    flex-direction: column;
}
.flex-wrap{
    flex-wrap: wrap;
}
@each $fKey,$fVal in $flex-jc {
    .jc-#{$fKey}{
        justify-content:$fVal;
    }
}

@each $fKey,$fVal in $flex-ai {
    .ai-#{$fKey}{
        align-items:$fVal;
    }
}
.flex-1{
    flex: 1;
}
.flex-grow-1{
    flex-grow: 1;
}

// marginå’Œpadding
@each $typeKey,$typeVal in $spacing-types {
    @each $direcKey,$direcVal in $spacing-direction {
        @each $sizeKey,$sizeVal in $spacing-sizes{  
            // .mt-0          
            .#{$typeKey}#{$direcKey}-#{$sizeKey}{
                #{$typeVal}-#{$direcVal}:$sizeVal * $base-spacing-size
            }
            // .m-0     
            .#{$typeKey}-#{$sizeKey}{
                #{$typeVal}:$sizeVal * $base-spacing-size
            }
            // .mx-0
            .#{$typeKey}x-#{$sizeKey}{
                #{$typeVal}-left: $sizeVal * $base-spacing-size;
                #{$typeVal}-right: $sizeVal * $base-spacing-size;
            }
            // .my-0
            .#{$typeKey}y-#{$sizeKey}{
                #{$typeVal}-top: $sizeVal * $base-spacing-size;
                #{$typeVal}-bottom: $sizeVal * $base-spacing-size;
            }
        }
    }
}

.btn{
    border:none;
    border-radius: 0.1429rem;
    font-size: map-get($font-sizes, 'sm') * $base-font-size;
}
@each $brKey,$brVal in $radius-size {
    .br-#{$brKey}{
        border-radius: $brVal;
    }
}
// nav
.nav{
    display: flex;
    padding: 0.75rem 0;
    .nav-item{
        color: map-get($colors, 'primary');
        padding-bottom: 5px;
        &.active{
            border-bottom: solid 3px map-get($colors, 'primary');
        }
    }
    &.inverse{
        .nav-item{
            color: #fff;
            &.active{
                border-bottom-color: #fff;
            }
        }
    }
}
.w-100{
    width: 100%;
}
.h-100{
    height: 100%;
}
a{
    text-decoration: none;
    color: #000;
}